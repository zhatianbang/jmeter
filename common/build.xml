<?xml version="1.0" encoding="utf-8" ?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at
    
       http://www.apache.org/licenses/LICENSE-2.0
    
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="ant-jmeter" default="run">
    <description>

        Sample build file for use with ant-jmeter.jar
        See http://www.programmerplanet.org/pages/projects/jmeter-ant-task.php

    To run a test and create the output report:
        ant -Dtest=script

    To run a test only:
        ant -Dtest=script run

    To run report on existing test output
        ant -Dtest=script report

    The "script" parameter is the name of the script without the .jmx suffix.

    Additional options:
        -Dshow-data=y - include response data in Failure Details
        -Dtestpath=xyz - path to test file(s) (default user.dir).
                         N.B. Ant interprets relative paths against the build file
        -Djmeter.home=.. - path to JMeter home directory (defaults to parent of this build file)
        -Dreport.title="My Report" - title for html report (default is 'Load Test Results')
    </description>
	<!--指定一个时间变量叫time，格式为yyyyMMddhhmmss-->
	<tstamp>  
        <format property="time" pattern="yyyyMMddhhmm" />  
    </tstamp>  
    <!--在ant中，property标签表示定义一个ant变量or属性,根据需要添加即可。 -->
	<property name="jmeter.home" value="D:\installation\apache-jmeter-5.1.1"/><!--jmeter的安装目录-->
	<property name="testplan.home" value="${jmeter.home}\common\jmx" />	<!--jmx脚本路径-->
    <property name="report.title" value="Load Test Results性能测试报告"/> <!--html报告抬头，也是jtl和html名字的部分-->
	<property name="result.htmlPath" value="${jmeter.home}\common\html"/>	<!--html报告路径-->
	<property name="result.jtlname" value="${jmeter.home}\common\jtl\${report.title}${time}.jtl"/>		<!--jtl文件路径+名字-->
	<property name="result.htmlname" value="${result.htmlPath}\${report.title}${time}.html"/>	<!--html报告名字-->
	<property name="threadnum" value="${tnum}" />	<!--表示命令行执行ant时传了一个变量叫tnum，命令行为："ant -Dtnum=5",一般用来传递线程数用的-->
	

    <!-- 用来指定ant和jmeter集成所需要用到的jar包，是由jmeter提供的，默认存放在jmeter的extras目录下 ,如果不指定下面的jar包，则需要把该jar包放到ant的lib目录下-->
    <path id="jmeter.classpath">
        <fileset dir="${jmeter.home}\extras">
          <include name="ant-jmeter*.jar"/>
        </fileset>
    </path>

    <taskdef
        name="jmeter"
        classpathref="jmeter.classpath"
        classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"/>
    
    <target name="all" depends="run,report"/>

    <target name="run">
        <!--为了防止追加到已有的文件，所以先删除。
			<delete file="${testpath}/${test}.html"/> 
		-->

		
		<!-- 下面一行中的testplan不支持*.jmx，如需使用*.jmx,则必须使用testplans，具体看另一篇的build.xml，如果想使用多个jmeter标签方法，则参考第三篇build.xml-->
        <jmeter jmeterhome="${jmeter.home}" testplan ="${testplan.home}/新增设备.jmx" resultlog="${result.jtlname}">
	    <jmeterarg value="-e"/>
	     <!--注意：正常是-o+空格+报告存放路径，但是这里不需要空格（加了空格，java不识别），保存存放路径必须为空文件夹，一般加个时间参数-o${result.htmlPath}/${time}，这样每次会生成一个新的文件夹，里面存报告
		如果一直使用同样的文件夹，则需单独写个脚本清空该文件夹下的内容-->
	    <jmeterarg value="-o${result.htmlPath}/${time}"/>   
        <!--
            <jvmarg value="-Xincgc"/>
            <jvmarg value="-Xmx128m"/>
            <jvmarg value="-Dproperty=value"/>
            <jmeterarg value="-qextra.properties"/>
        -->
            <!-- Force suitable defaults -->
            <property name="jmeter.save.saveservice.output_format" value="csv"/> <!--由于上面使用了-e -o，必须使用csv格式-->
            <property name="thread.num" value="${threadnum}" />
            <property name="jmeter.save.saveservice.bytes" value="true"/>
        </jmeter>

    </target>

	<!--下面几行是生成报告时使用到的两个包-->
    <property name="lib.dir" value="${jmeter.home}/lib"/>

    <!-- Use xalan copy from JMeter lib directory to ensure consistent processing with Java 1.4+ -->
    <path id="xslt.classpath">
        <fileset dir="${lib.dir}" includes="xalan*.jar"/>
        <fileset dir="${lib.dir}" includes="serializer*.jar"/>
    </path>

    <target name="report" depends="xslt-report,copy-images">
    </target>

	<!-- 生成报告，通过in属性指定jtl结果文件，out指定生成的html文件，style指定的是报告模板 -->
    <target name="xslt-report" depends="_message_xalan">
        <tstamp><format property="report.datestamp" pattern="yyyy/MM/dd HH:mm:ss"/></tstamp>
        <xslt
            classpathref="xslt.classpath"
            force="true"
            in="${result.jtlname}"
            out="${result.htmlname}"
            style="${jmeter.home}/extras/jmeter-results-detail-report_21.xsl">
            <param name="titleReport" expression="${report.title}"/><!--html中报告的title-->
            <param name="dateReport" expression="${report.datestamp}"/><!--html中报告中的时间戳-->
        </xslt>
    </target>

    <!-- Copy report images if needed -->
    <target name="copy-images" >
        <copy file="${jmeter.home}/extras/expand.png" tofile="${result.htmlPath}/expand.png"/>
        <copy file="${jmeter.home}/extras/collapse.png" tofile="${result.htmlPath}/collapse.png"/>
    </target>
    <!-- Check that the xalan libraries are present -->
    <condition property="xalan.present">
          <and>
              <!-- No need to check all jars; just check a few -->
            <available classpathref="xslt.classpath" classname="org.apache.xalan.processor.TransformerFactoryImpl"/>
            <available classpathref="xslt.classpath" classname="org.apache.xml.serializer.ExtendedContentHandler"/>
          </and>
    </condition>

    <target name="_message_xalan" unless="xalan.present">
          <echo>Cannot find all xalan and/or serialiser jars</echo>
        <echo>The XSLT formatting may not work correctly.</echo>
        <echo>Check you have xalan and serializer jars in ${lib.dir}</echo>
    </target>


</project>
